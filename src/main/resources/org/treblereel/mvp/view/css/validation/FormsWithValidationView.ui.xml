<!--
  #%L
  GwtBootstrap3
  %%
  Copyright (C) 2015 GwtBootstrap3
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<ui:UiBinder xmlns:ui="urn:ui:org.gwtproject.uibinder"
             xmlns:g="urn:import:org.gwtproject.user.client.ui"
             xmlns:b="urn:import:org.gwtbootstrap3.client.ui"
             xmlns:b2="urn:import:org.gwtbootstrap3.client.ui.html"
             xmlns:b3="urn:import:org.gwtbootstrap3.extras.toggleswitch.client.ui"
             xmlns:d="urn:import:org.treblereel.ui">

    <ui:with field="nameTokens" type="org.treblereel.place.NameTokens" />
<!--    <ui:style>
    .footer button {
         margin-right: 5px;
    }
    
    .resultHeader {
         text-decoration: underline;
    }
    
    .resultBody {
         color: blue;
    }
    
    .validateBtn, .validateBtnNext {
         width: 80px;
    }
    
    .validateBtnNext {
         margin-left: 5px;
    }
    
    .hr {
         border-bottom: 1px solid #ccc;
         padding-bottom: 10px;
         margin-bottom: 10px;
    }
    </ui:style>-->
    <b:Row>
        <b:Column size="XS_12">
            <b:PageHeader text="Forms with Validation" />
            <b:Form ui:field="form">
                <b:Panel>
                    <b:PanelHeader>
                        <b:Heading size="H3" text="Input Validators" />
                    </b:PanelHeader>
                    <b:PanelBody>
<!--
                        <b:Row addStyleNames="{style.hr}">
-->
                        <b:Row>
                            <b:Column size="SM_6">
                                <b:FormGroup>
                                    <b:FormLabel for="validateOnBlur">Submit On Enter:&#160;</b:FormLabel>
                                    <b3:ToggleSwitch ui:field="submitOnEnterToggle" size="MINI" value="true" />
                                </b:FormGroup>
                            </b:Column>
                            <b:Column size="SM_6">
                                <b:Heading size="H5" text="Submit On Enter" />
                                <d:PrettyPre addStyleNames="lang-java"><![CDATA[
form.setSubmitOnEnter(true);
                         ]]></d:PrettyPre>
                                <b2:Text>or with UiBinder</b2:Text>
                                <d:PrettyPre addStyleNames="lang-java"><![CDATA[
<b:Form submitOnEnter="true" />
                         ]]></d:PrettyPre>
                            </b:Column>
                        </b:Row>
<!--
                        <b:Row addStyleNames="{style.hr}">
-->
                        <b:Row>
                            <b:Column size="SM_6">
                                <b:FormGroup>
                                    <b:FormLabel for="validateOnBlur">Validate on Blur:&#160;</b:FormLabel>
                                    <b3:ToggleSwitch ui:field="validateOnBlurToggle" size="MINI" value="true" />
                                </b:FormGroup>
                            </b:Column>
                            <b:Column size="SM_6">
                                <b:Heading size="H5" text="Validate on Blur" />
                                <d:PrettyPre addStyleNames="lang-java"><![CDATA[
input.setValidateOnBlur(true);
                         ]]></d:PrettyPre>
                                <b2:Text>or with UiBinder</b2:Text>
                                <d:PrettyPre addStyleNames="lang-java"><![CDATA[
<b:TextBox validateOnBlur="true" />
                         ]]></d:PrettyPre>
                            </b:Column>
                        </b:Row>
<!--
                        <b:Row addStyleNames="{style.hr}">
-->
                        <b:Row>
                            <b:Column size="SM_6">
                                <b:FormGroup>
                                    <b:FormLabel for="allowBlank" showRequiredIndicator="true">Allow Blank
                                        Validator</b:FormLabel>
                                    <b:InlineHelpBlock iconType="EXCLAMATION_TRIANGLE" />
                                    <b:TextBox ui:field="allowBlankTextBox" allowBlank="false" validateOnBlur="true" />
                                </b:FormGroup>
                            </b:Column>
                            <b:Column size="SM_6">
                                <b:Heading size="H5" text="Java Code" />
                                <d:PrettyPre addStyleNames="lang-java"><![CDATA[
input.setAllowBlank(true);
                         ]]></d:PrettyPre>
                                <b:Heading size="H5" text="UiBinder" />
                                <d:PrettyPre addStyleNames="lang-xml"><![CDATA[
<b:TextBox allowBlank="false" />
                         ]]></d:PrettyPre>
                            </b:Column>
                        </b:Row>
                        <b:Row>
                            <b:Column size="SM_6">
                                <b:FormGroup>
                                    <b:FormLabel for="allowBlank" showRequiredIndicator="true">Custom Validator</b:FormLabel>
                                    <b:InlineHelpBlock iconType="EXCLAMATION_TRIANGLE" />
                                    <b:TextBox ui:field="yesNoTextBox" allowBlank="false" validateOnBlur="true" />
                                </b:FormGroup>
                            </b:Column>
                            <b:Column size="SM_6">
                                <b:Heading size="H5" text="Java Code" />
                                <d:PrettyPre addStyleNames="lang-java"><![CDATA[
yesNoTextBox.addValidator(new Validator() {\n
\s\s@Override\n
\s\spublic List<EditorError> validate(Editor editor, Object value) {\n
\s\s\s\sList<EditorError> result = new ArrayList<EditorError>();\n
\s\s\s\sString valueStr = value == null ? "" : value.toString();\n
\s\s\s\sif (!("Yes".equalsIgnoreCase(valueStr)\n 
\s\s\s\s\s\s|| "No".equalsIgnoreCase(valueStr))) {\n
\s\s\s\s\s\sresult.add(new BasicEditorError(yesNoTextBox, value, "Must be \"Yes\" or \"No\""));\n
\s\s\s\s}\n
\s\s\s\sreturn result;\n
\s\s}\n
});
                         ]]></d:PrettyPre>
                            </b:Column>
                        </b:Row>
                    </b:PanelBody>
                    <b:PanelFooter>
                        <b:Row>
                            <b:Column size="SM_6">
                                <b:Button ui:field="formValidateButton"
                                    text="Validate" />
<!--                                <b:Button addStyleNames="{style.validateBtn}" ui:field="formValidateButton"
                                    text="Validate" />-->
<!--                                <b:Button addStyleNames="{style.validateBtnNext}" ui:field="formResetButton"
                                    text="Reset" />-->

                                <b:Button ui:field="formResetButton"
                                    text="Reset" />
                            </b:Column>
                            <b:Column size="SM_6">
                                <b:Heading size="H5" text="Java Code" />
                                <d:PrettyPre addStyleNames="lang-java"><![CDATA[
@UiHandler("formResetButton")\n
public void onFormResetClick(ClickEvent event) {\n
\s\sform.reset();\n
}\n\n
@UiHandler("formValidateButton")\n
public void onFormValidateClick(ClickEvent event) {\n
\s\sform.validate();\n
}\n
                         ]]></d:PrettyPre>
                            </b:Column>
                        </b:Row>
                    </b:PanelFooter>
                </b:Panel>
            </b:Form>

            <b:Panel>
                <b:PanelHeader>
                    <b:Heading size="H3" text="JSR-303 Bean Validation" />
                </b:PanelHeader>
                <b:PanelBody>
                    <b:Column size="SM_6">
                        <b:Panel>
                            <b:PanelHeader>
                                <b:Heading size="H3" text="Login" />
                            </b:PanelHeader>
                            <b:PanelBody ui:field="body" />
                            <b:PanelFooter>
<!--
                            <b:PanelFooter addStyleNames="{style.footer}">
-->
                                <b:Button type="PRIMARY" ui:field="loginButton">Login</b:Button>
                                <b:Button type="DANGER" ui:field="resetButton">Reset</b:Button>
                            </b:PanelFooter>
                        </b:Panel>
                    </b:Column>
                    <b:Column size="SM_6">
                        <b:Heading size="H4" text="Login Result" />
<!--
                        <b:Heading size="H4" addStyleNames="{style.resultHeader}" text="Login Result" />
-->
                        <g:HTMLPanel>
<!--
                            <div class="{style.resultBody}" ui:field="result" />
-->
                            <div ui:field="result" />
                        </g:HTMLPanel>
                    </b:Column>
                </b:PanelBody>
                <b:PanelFooter>
                    <b:Heading size="H5" text="Bean with JSR-303 validation annotations:" />
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
public class Credentials implements Serializable {\n\n
\s\sprivate String password = null;\n\n
\s\sprivate String username = null;\n\n
\s\s@NotNull\n
\s\s@Size(min = 4, max = 12)\n
\s\spublic String getPassword() {\n
\s\s\s\sreturn password;\n
\s\s}\n\n
\s\s@NotNull\n
\s\spublic String getUsername() {\n
\s\s\s\sreturn username;\n
\s\s}\n\n
\s\spublic void setPassword(final String password) {\n
\s\s\s\sthis.password = password;\n
\s\s}\n\n
\s\spublic void setUsername(final String username) {\n
\s\s\s\sthis.username = username;\n
\s\s}\n\n
\s\s@Override\n
\s\spublic String toString() {\n
\s\s\s\sreturn "Credentials [username=" + username + ", password=" + password + "]";\n
\s\s}\n\n
}
                    ]]></d:PrettyPre>
                    <b:Heading size="H5" text="Create a validation factory:" />
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
public class FormsValidationFactory extends AbstractGwtValidatorFactory {\n\n
\s\s@GwtValidation(Credentials.class)\n
\s\spublic interface GwtValidator extends Validator {\n
\s\s}\n\n
\s\s@Override\n
\s\spublic AbstractGwtValidator createValidator() {\n
\s\s\s\sreturn GWT.create(GwtValidator.class);\n
\s\s}\n\n
}
                    ]]></d:PrettyPre>
                    <b:Heading size="H5" text="Add validation to gwt module:" />
                    <d:PrettyPre addStyleNames="lang-xml"><![CDATA[
<inherits name="org.hibernate.validator.HibernateValidator" />\n
\s\s<replace-with class="org.gwtbootstrap3.demo.client.application.css.validation.FormsValidationFactory">\n
\s\s<when-type-is class="javax.validation.ValidatorFactory" />\n
</replace-with>
                    ]]></d:PrettyPre>
                    <b:Heading size="H5" text="Create an editor:" />
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
public class CredentialsEditor extends Composite implements Editor<Credentials> {\n\n
\s\spublic interface Binder extends UiBinder<Form, CredentialsEditor> {\n
\s\s}\n\n
\s\sprivate static final Binder BINDER = GWT.create(Binder.class);\n\n
\s\s@UiField\n
\s\sprotected Input password;\n\n
\s\s@UiField\n
\s\sprotected TextBox username;\n\n
\s\s@Inject\n
\s\spublic CredentialsEditor() {\n
\s\sinitWidget(BINDER.createAndBindUi(this));\n
\s\s}\n\n
}
                     ]]></d:PrettyPre>
                    <d:PrettyPre addStyleNames="lang-xml"><![CDATA[
<b:Form>\n
\s\s<b:FieldSet>\n
\s\s\s\s<b:FormGroup>\n
\s\s\s\s\s\s<b:FormLabel for="username">User</b:FormLabel>\n
\s\s\s\s\s\s<b:InlineHelpBlock iconType="EXCLAMATION_TRIANGLE" />\n
\s\s\s\s\s\s<b:TextBox b:id="username" ui:field="username" />\n
\s\s\s\s</b:FormGroup>\n
\s\s\s\s<b:FormGroup>\n
\s\s\s\s\s\s<b:FormLabel for="password">Password</b:FormLabel>\n
\s\s\s\s\s\s<b:InlineHelpBlock iconType="EXCLAMATION_TRIANGLE" />\n
\s\s\s\s\s\s<b:Input type="PASSWORD" ui:field="password" b:id="password" />\n
\s\s\s\s</b:FormGroup>\n
\s\s</b:FieldSet>\n
</b:Form>\n
                    ]]></d:PrettyPre>
                    <b:Heading size="H5" text="Create and use the driver:" />
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
public class FormsWithValidationView extends ViewImpl implements FormsWithValidationPresenter.MyView {\n\n
\s\sinterface Binder extends UiBinder<Widget, FormsWithValidationView> {\n
\s\s}\n\n
\s\sinterface CredentialDriver extends SimpleBeanEditorDriver<Credentials, CredentialsEditor> {\n
\s\s}\n\n
\s\sprivate static final CredentialDriver DRIVER = GWT.create(CredentialDriver.class);\n\n
\s\s@Ignore\n
\s\s@UiField\n
\s\sprotected PanelBody body;\n\n
\s\s@Ignore\n
\s\s@UiField\n
\s\sprotected DivElement result;\n\n
\s\s@Inject\n
\s\sFormsWithValidationView(final Binder uiBinder, CredentialsEditor editor) {\n
\s\s\s\sinitWidget(uiBinder.createAndBindUi(this));\n
\s\s\s\sbody.add(editor);\n
\s\s\s\sDRIVER.initialize(editor);\n
\s\s}\n\n
\s\s@Override\n
\s\sprotected void onAttach() {\n
\s\s\s\ssuper.onAttach();\n
\s\s\s\sDRIVER.edit(new Credentials());\n
\s\s}\n\n
\s\s@UiHandler("resetButton")\n
\s\spublic void onResetClick(ClickEvent event) {\n
\s\s\s\sDRIVER.edit(new Credentials());\n
\s\s\s\sresult.removeAllChildren();\n
\s\s}\n\n
\s\s@UiHandler("loginButton")\n
\s\spublic void onLoginClick(ClickEvent event) {\n
\s\s\s\sCredentials creds = DRIVER.flush();\n\n
\s\s\s\sValidator validator = Validation.buildDefaultValidatorFactory().getValidator();\n
\s\s\s\sSet<ConstraintViolation<Credentials>> violations = validator.validate(creds, Default.class);\n
\s\s\s\sif (violations.size() > 0) {\n
\s\s\s\s\s\sDRIVER.setConstraintViolations(new ArrayList<ConstraintViolation<?>>(violations));\n
\s\s\s\s}\n\n
\s\s\s\sif (!DRIVER.hasErrors()) {\n
\s\s\s\s\s\sresult.setInnerText(creds.toString());\n
\s\s\s\s}\n
\s\s}\n\n
}
                     ]]></d:PrettyPre>
                </b:PanelFooter>
            </b:Panel>

            <b:Panel>
                <b:PanelHeader>
                    <b:Heading size="H3" text="Validation Messages" />
                </b:PanelHeader>
                <b:PanelBody>
                    <b2:Text>Validation messages can be customized by creating a custom ValidatorMessageMixin. The
                        following example utilizes the javax.validation style messages:</b2:Text>
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
public class CustomValidationMixin extends ValidatorMessageMixin {\n\n
\s\sprivate UserValidationMessagesResolver messageResolver = GWT.create(UserValidationMessagesResolver.class);\n\n
\s\sprivate ValidationMessages messages = GWT.create(ValidationMessages.class);\n\n
\s\s@Override\n
\s\spublic String lookup(final String key) {\n
\s\s\s\sString value = messageResolver.get(key);\n
\s\s\s\sif (value == null) {\n
\s\s\s\s\s\stry {\n
\s\s\s\s\s\s\s\svalue = key == null ? null : messages.getString(key.replace(".", "_"));\n
\s\s\s\s\s\s} catch (MissingResourceException e) {\n
\s\s\s\s\s\s\s\svalue = null;\n
\s\s\s\s\s\s}\n
\s\s\s\s}\n
\s\s\s\sreturn value;\n
\s\s}\n\n
}
                    ]]></d:PrettyPre>
                    <b2:Text>If you are using the javax.validation messages then do this first:</b2:Text>
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
<replace-with class="...CustomValidationMessagesResolver">\n
\s\s<when-type-is class="com.google.gwt.validation.client.UserValidationMessagesResolver" />\n
</replace-with>\n
                    ]]></d:PrettyPre>
                    <b2:Text>Replace your mixin with the one provided:</b2:Text>
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
<replace-with class="...CustomValidationMixin">\n
\s\s<when-type-is class="org.gwtbootstrap3.client.ui.form.validator.ValidatorMessageMixin" />\n
</replace-with>\n
                    ]]></d:PrettyPre>
                </b:PanelBody>
            </b:Panel>
            <b:Panel>
                <b:PanelHeader>
                    <b:Heading size="H3" text="Validation Messages - i18N Localization" />
                </b:PanelHeader>
                <b:PanelBody>
                    <g:HTMLPanel>
                        Localization can be accomplished by adding ValidationMessages_{locale}.properties files in
                        the
                        "org/gwtbootstrap3/client/ui/form/validator" and "org/hibernate/validator" directories for
                        JSR-303 validation messages. The gwt.xml files also needs to be modified to add the i18n
                        dependency and locales needed.
                        <d:PrettyPre addStyleNames="lang-java"><![CDATA[
<!-- Validation and locale dependencies. -->\n
<inherits name="com.google.gwt.i18n.I18N"/>\n
<extend-property name="locale" values="en"/>\n
<extend-property name="locale" values="fr"/>\n
<set-property-fallback name="locale" value="en"/>\n
                    ]]></d:PrettyPre>
                        This page has enabled the english and french locales for validation messages only. Try it out:
                        <br />
                        <br />
                        <a class="btn btn-default" href="?locale=en#{nameTokens.getFormsWithValidation}">English</a>
                        <a class="btn btn-default" href="?locale=fr#{nameTokens.getFormsWithValidation}">French</a>
                    </g:HTMLPanel>
                </b:PanelBody>
            </b:Panel>
        </b:Column>
    </b:Row>
</ui:UiBinder>
