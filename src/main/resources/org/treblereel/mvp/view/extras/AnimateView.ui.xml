<!--
  #%L
  GwtBootstrap3
  %%
  Copyright (C) 2016 GwtBootstrap3
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<ui:UiBinder xmlns:ui="urn:ui:org.gwtproject.uibinder"
             xmlns:b="urn:import:org.gwtbootstrap3.client.ui"
             xmlns:b.html="urn:import:org.gwtbootstrap3.client.ui.html"
             xmlns:d="urn:import:org.treblereel.ui">

    <ui:style>
        .danger {
            background-color: #fcf2f2;
            border-color: #dFb5b4;
        }

        .margin-fix {
            margin-top: 0 !important;
        }

        .spacing {
            margin-left: 5px;
        }
    </ui:style>

    <b:Row>
        <b:Column size="XS_12">

            <b:PageHeader text="Animate"/>

            <b:BlockQuote>
                <b.html:Strong>Original Library Link:</b.html:Strong>
                <b:Anchor target="_blank" addStyleNames="{style.spacing}" href="http://daneden.github.io/animate.css/">Animate.css
                </b:Anchor>
                <b.html:Br/>
                <b.html:Strong>Current Version Supported: 3.5.2</b.html:Strong>
            </b:BlockQuote>

            <b:BlockQuote addStyleNames="{style.danger}">
                <b:Heading addStyleNames="{style.margin-fix}" size="H4" text="Required for use"/>
                <b.html:Paragraph>
                    To use Animate, you must first add the extras module to your project. In Maven:
                </b.html:Paragraph>
                <d:PrettyPre addStyleNames="lang-xml">
                    &lt;dependency&gt;\n
                    \s\s\s\s&lt;groupId&gt;org.gwtbootstrap3&lt;/groupId&gt;\n
                    \s\s\s\s&lt;artifactId&gt;gwtbootstrap3-extras&lt;/artifactId&gt;\n
                    \s\s\s\s&lt;version&gt;VERSION&lt;/version&gt;\n
                    \s\s\s\s&lt;scope&gt;provided&lt;/scope&gt;\n
                    &lt;/dependency&gt;
                </d:PrettyPre>
                <b.html:Paragraph>
                    Then you need to inherit the following GWT Module
                    <strong>additionally</strong>
                    to any GwtBootstrap3
                    module into your *.gwt.xml of your project:
                </b.html:Paragraph>
                <d:PrettyPre addStyleNames="lang-xml">
                    &lt;inherits name="org.gwtbootstrap3.extras.animate.Animate"/&gt;
                </d:PrettyPre>
            </b:BlockQuote>

            <b:Panel>
                <b:PanelHeader>
                    <b:Heading size="H3" text="Using animations"/>
                </b:PanelHeader>
                <b:PanelBody>
                    <b.html:Paragraph>Animations are CSS based. To animate any object, simply add proper style name to it. In java use enum <i>Animation</i> to get available animation`s class names. Animation starts when Widget is attached to the DOM or new (yet unused) class name is added and runs only once.</b.html:Paragraph>
                    <b.html:Paragraph><strong>We strongly recommend to use java class <i>Animate</i> to assign animations to your widgets.</strong></b.html:Paragraph>
                    <b.html:ClearFix/>
                    <b:Button icon="PLAY" ui:field="animated" type="PRIMARY" text="Re-play animation"/>
                </b:PanelBody>
                <b:PanelFooter>
                    <d:PrettyPre addStyleNames="lang-xml">
                        &lt;!-- UiBinder --&gt;\n
                        &lt;b:Button text="Re-play animation" ui:field="button" icon="PLAY" type="PRIMARY"/&gt;\n
                    </d:PrettyPre>
                    <d:PrettyPre addStyleNames="lang-java">
                         Java\n
                        @UiField("button")\n
                        Button button;\n\n
                        // Assign animation anywhere in code to start it (waits to start if not attached to the DOM)\n
                        Animate.animate(button, Animation.RUBBER_BAND);\n\n
                        @UiHandler("button")\n
                        public void onClick(ClickEvent event) {\n
                        \s\s// Restart animation on demand (will stop previous animation)\n
                        \s\sAnimate.animate(run, Animation.RUBBER_BAND);\n
                        }\n
                    </d:PrettyPre>
                </b:PanelFooter>
            </b:Panel>

            <b:Panel>
                <b:PanelHeader>
                    <b:Heading size="H3" text="Customizing animations"/>
                </b:PanelHeader>
                <b:PanelBody>
                    <b.html:Paragraph>You can use various static methods from <i>Animate</i> class to customize each animation run. Customizable properties are: <i>repeat, duration</i> and <i>delay</i>. You can also pass custom style name as String to run your own animations.</b.html:Paragraph>
                    <b.html:Paragraph><strong>Each run of unique combination of animation and it's settings appends new stylesheet to the DOM.</strong> Don't overuse it with too many different configurations.</b.html:Paragraph>
                    <b.html:ClearFix/>
                    <b:Button ui:field="run" icon="PLAY" type="PRIMARY" text="Run animation"/>
                </b:PanelBody>
                <b:PanelFooter>
                    <d:PrettyPre addStyleNames="lang-xml">
                        &lt;!-- UiBinder --&gt;\n
                        &lt;b:Button ui:field="button" icon="PLAY" text="Run animation" type="PRIMARY"/&gt;\n
                    </d:PrettyPre>
                    <d:PrettyPre addStyleNames="lang-java">
                        Java\n
                        @UiField("button")\n
                        Button button;\n\n
                        @UiHandler("button")\n
                        public void onClick(ClickEvent event) {\n
                        \s\s// Run animation twice and for 4 second\n
                        \s\sAnimate.animate(button, Animation.RUBBER_BAND, 2, 4000);\n
                        }\n
                    </d:PrettyPre>
                </b:PanelFooter>
            </b:Panel>

            <b:Panel>
                <b:PanelHeader>
                    <b:Heading size="H3" text="Stopping animations"/>
                </b:PanelHeader>
                <b:PanelBody>
                    <b.html:Paragraph>Each call of <i>Animate.animate(....)</i> returns String value of used class name. To stop animation in the middle just use:</b.html:Paragraph>
                    <b.html:ClearFix/>
                    <b.html:Paragraph>
                        <d:PrettyPre addStyleNames="lang-java">
                            Animate.stopAnimation(button, myAnimationClassName);\n
                        </d:PrettyPre>
                    </b.html:Paragraph>
                    <b.html:ClearFix/>
                    <b.html:Paragraph>You can also remove animation after it ends, to prevent re-play when widget is re-attached to the DOM (e.g. switching pages in some GWT app)</b.html:Paragraph>
                    <b.html:ClearFix/>
                    <b.html:Paragraph>
                        <d:PrettyPre addStyleNames="lang-java">
                            Animate.removeAnimationOnEnd(button, myAnimationClassName)\n
                        </d:PrettyPre>
                    </b.html:Paragraph>
                    <b.html:Paragraph>Using <i>Animation.NO_ANIMATION</i> doesn't remove any animations !! It's just helper value, which can be used when some method requires Animation parameter which you don't have / don't want to use.</b.html:Paragraph>
                    <b.html:ClearFix/>
                </b:PanelBody>
            </b:Panel>

        </b:Column>
    </b:Row>

</ui:UiBinder>
